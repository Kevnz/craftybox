{"name":"Craftybox","body":"# CraftyBox \r\n\r\nHere are some components I am working on to help using Box2D in Crafty.js ([web](http://craftyjs.com/) | [github](https://github.com/craftyjs/Crafty)) engine.\r\n\r\nIt uses [Box2DWeb](http://code.google.com/p/box2dweb/), which is a JavaScript port from [Box2DFlash](http://www.box2dflash.org), which is a port from the original [Box2D](http://www.gphysics.com/) physic engine written in C++.\r\n\r\nThe components are written in [CoffeeScript](http://jashkenas.github.com/coffee-script/), which speeds up the developing process really quick.\r\n\r\nA compiled JS file is available.\r\n\r\n## Components\r\n\r\n* `Box2D`: intended to replace `2D, Physics, Gravity, Collision`.\r\n* `Throwable`: intended to replace `Draggable`. Of course it uses `Mouse`.\r\n\r\n## Usuage\r\n\r\n### Initialization\r\n\r\nYou can initialize after Crafty with a set of optional options:\r\n\r\n````javascript\r\nCrafty.init()\r\nCrafty.Box2D.init({gravityX:0, gravityY:0, scale:30, doSleep:true})\r\n````\r\n\r\nThe default world has no gravity, allows sleeping, and has a SCALE of 30.\r\n\r\nOr it will be initialized when you create a Box2D entity. You cannot set the world's properties at this point, and it will use the default values.\r\n\r\nHowever you can change them through setters anytime after the world is created\r\n\r\n````javascript\r\nCrafty.Box2D.gravity = {x: 0, y: 10}\r\nCrafty.Box2D.SCALE = 1\r\n````\r\n\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, w:w, h:h});`: A static rectangle\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, w:w, dynamic: true});`: A dynamic square\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, h:h, dynamic: true});`: also a dynamic square\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, r:r, dynamic: true});`: dynamic circle\r\n\r\nYou can also indicate `density`, `friction`, and `restitution` if you don't want the default values (1.0, 0.5, 0.2 accordingly).\r\n\r\n`Crafty.e(\"Box2D\").attr({x:x, y:y, w:w, h:h, density: 1.0, friction: 0.5, restitution: 0.2});`\r\n\r\nSome shortcuts:\r\n\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y}).rectangle(w, h);`: static rectangle\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, dynamic: true}).rectangle(w, w);`: A dynamic square\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, dynamic: true}).rectangle(w);`: also a dynamic square\r\n* `Crafty.e(\"Box2D\").attr({x:x, y:y, dynamic: true}).circle(r);`: dynamic circle\r\n\r\nThe Box2D world is accessible with `Crafty.Box2D.world`\r\n\r\nSee `examples` folder for more usuages.\r\n\r\n## Changelogs:\r\n\r\n### v0.0.3\r\n\r\n* Added usuage\r\n* Same attributes as of Crafty's 2D component\r\n* Entities can move and rotate\r\n* Finished Box2D example.\r\n* Don't recreate body when .attr({x, y}) is called again.\r\n* Made `.isAt`, `.move`, `.shift`, `.attach`, `.detach` work.\r\n* More examples.\r\n* Refactored to allow more usuages.\r\n* Use Crafty's FPS for Box2D World step.\r\n* Remove body from Box2D world before destroying entity.\r\n\r\n### v0.0.2\r\n\r\n* Changed the changelog version format :)\r\n* Started writing tests\r\n* Parameters for SetAsBox should be half width, half height\r\n* Can create circle by `.attr({x, y, r})`\r\n* Can specify dynamic body by `.attr({x, y, r, dynamic:true})`\r\n* Added the standard example from Box2D\r\n\r\n### v0.0.1\r\n\r\n* Rewrote from scratch.\r\n* Updated Crafty to v0.4.7.\r\n* Updated Coffee-Script compiler to v1.3.1.\r\n* Removed Box2DWorld component.\r\n* Extended Crafty with a Box2D property to act as the world.\r\n\r\n## To Do:\r\n\r\n* <del>Link between Crafty's 2D attributes and Box2D attributes</del>\r\n* <del>Make objects move and rotate</del>\r\n* Collision\r\n* <del>`.move`, `.attach`, `.shift`, etc...</del>\r\n* <del>`\"Mouse\"`, `\"Draggable\"`, `\"Four-way\"`, etc...</del>\r\n* Throwable","tagline":"Box2D Components for Crafty.js","google":"UA-30849064-1","note":"Don't delete this file! It's used internally to help with page regeneration."}